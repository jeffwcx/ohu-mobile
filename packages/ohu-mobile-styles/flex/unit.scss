// unit module

$units: 12 !default;
$level: 10 !default;
$rate: 8px !default;

@mixin unit ($n) {
  @if $n < 2 {
    @error "$unit variable can not < 2!";
  }
  @for $i from 1 through $n {
    &.is-#{$i}-#{$n} {
      max-width: percentage(math.div($i, $n));
      flex-basis: percentage(math.div($i, $n));
    }
    &.is-offset-#{$i} {
      margin-left: percentage(math.div($i, $n));
    }
    $commonDivisor: getCommonDivisor($i, $n);
    @if $commonDivisor != 1 {
      $ix: math.div($i, $commonDivisor);
      $nx: math.div($n, $commonDivisor);
      &.is-#{$ix}-#{$nx} {
        max-width: percentage(math.div($ix, $nx));
        flex-basis: percentage(math.div($ix, $nx));
      }
    }
  }
}

@mixin gap ($rate, $level) {
  @for $i from 1 through $level {
    @if $i == 1 {
      .#{$prefix}units-gap {
        margin: -$rate;
        >.#{$prefix}unit {
          box-sizing: border-box;
          padding: $rate;
        }
      }
    }
    $gap: $i * $rate;
    .#{$prefix}units-gap-#{$i} {
      margin: -$gap;
      >.#{$prefix}unit {
        box-sizing: border-box;
        padding: $gap;
      }
    }
  }
}

.#{$prefix}unit {
  margin: 0;
  flex-grow: 0;
  // flex-shrink: 1;
  @include unit($units);
}

@include gap($rate, $level);
